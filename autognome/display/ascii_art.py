GNOME_HAPPY = r"""
    ,*-~"`^"~-*,
   /  âˆ´âˆ´  âˆ´âˆ´  ,  \
  |  |âš¡| |âš¡| |   |
  |  (â—•) (â—•) |   |
  |   _`~'_  |   |
   \  \âˆžâˆž/  /   
    `-.___,-'    
      |_|_|
      |_|_|     
     /\_//\    
    //\_//\\   
   //  |_|  \\  
  //   |_|   \\ 
 //    |_|    \\
//     |_|     \\
"""

GNOME_AFRAID = r"""
    ,*-~"`^"~-*,
   /  ??  ??  ,  \
  |  |âš¡| |âš¡| |   |
  |  (âŠ™) (âŠ™) |   |
  |   _`~'_  |   |
   \  /âˆžâˆž\  /   
    `-.___,-'    
      |_|_|
      |_|_|     
     /\_//\    
    //\_//\\   
   //  |_|  \\  
  //   |_|   \\ 
 //    |_|    \\
//     |_|     \\
"""

GNOME_THINKING = r"""
    ,*-~"`^"~-*,
   /  âˆ´âˆ´  âˆ´âˆ´  ,  \
  |  |âš¡| |âš¡| |   |
  |  (ðŸ¤”) (ðŸ¤”) |   |
  |   _`~'_  |   |
   \  \..../  /   
    `-.___,-'    
      |_|_|
      |_|_|     
     /\_//\    
    //\_//\\   
   //  |_|  \\  
  //   |_|   \\ 
 //    |_|    \\
//     |_|     \\
"""

def get_gnome_art(state: str = "normal", is_observing: bool = False) -> str:
    """Get the gnome ASCII art based on emotional state and whether it's making observations"""
    # Observation takes precedence
    if is_observing:
        return GNOME_THINKING
    # Otherwise, show emotional state
    elif state == "afraid":
        return GNOME_AFRAID
    elif state == "normal":
        return GNOME_HAPPY
    # Fallback to happy
    return GNOME_HAPPY 